apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: dev-kpt # kpt-set: ${environment}-kpt
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::402606527140:role/eks-cluster-dev-kpt-external-dns # kpt-set: arn:aws:iam::${account_id}:role/eks-cluster-${environment}-kpt-external-dns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-dns
  namespace: dev-kpt # kpt-set: ${environment}-kpt
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-dns
  namespace: dev-kpt # kpt-set: ${environment}-kpt
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-dns
  namespace: dev-kpt # kpt-set: ${environment}-kpt
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: dev-kpt # kpt-set: ${environment}-kpt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: dev-kpt # kpt-set: ${environment}-kpt
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: k8s.gcr.io/external-dns/external-dns:v0.10.2
        args:
        - --source=service
        - --source=ingress
        - --domain-filter=mostlyconjecture.com
        - --provider=aws
        - --policy=upsert-only
        - --aws-zone-type=public
        - --registry=txt
        - --txt-owner-id=12345
      securityContext:
        fsGroup: 65534 # For ExternalDNS to be able to read Kubernetes and AWS token files
